name: CI/CD Pipeline for EC2 Deployment

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Images
      - name: Build and Push Docker Image
        run: |
          docker build -t soniamohan/siansawebserver:latest .
          docker push soniamohan/siansawebserver:latest


  deploy:
    runs-on: self-hosted

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up SSH access
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
   
      - name: Add GitHub SSH key to known_hosts
        run: |
          mkdir -p /home/ubuntu/.ssh
          chmod 700 /home/ubuntu/.ssh
          ssh-keyscan github.com >> /home/ubuntu/.ssh/known_hosts
          chmod 644 /home/ubuntu/.ssh/known_hosts

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PASSPHRASE }}" | ssh-add -
        env:
          SSH_ASKPASS: /usr/bin/ssh-askpass

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@your-ec2-ip << 'EOF'
            docker pull your-docker-image:latest
            docker stop your-container || true
            docker rm your-container || true
            docker run -d --name your-container -p 8080:8080 your-docker-image:latest
          EOF

